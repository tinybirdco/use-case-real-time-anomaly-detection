DESCRIPTION >
	Calculates the rate-of-change, or slope, between the most recent data point and the previous points.
See [HERE](https://github.com/tinybirdco/anomaly-detection/blob/main/content/rate-of-change.md) for more background on this recipe.


This relies on the ClickHouse `lagInFrame` function.

Key detail seems to be in this window function detail:
`(PARTITION BY id ORDER BY timestamp ASC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) `


NODE calculating_slope
DESCRIPTION >
    Calculates the slope between the most recent data and the previous data.

SQL >

    %
    WITH
      {{ Int16(detect_window_seconds, 600, description="Search this many most recent seconds of the data history.") }} AS detect_window_seconds,
      {{ Float32(max_slope, 3, description="Maximum slope, any higher than this are returned. Floating point")}} AS max_slope 
    SELECT id, 
      timestamp, 
      previous_timestamp,
      (value - previous_value) / (timestamp - previous_timestamp) AS slope,
      value, 
      previous_value,
      (value - previous_value) AS value_diff,
      (timestamp - previous_timestamp) AS time_diff,
      max_slope,
      lagInFrame(timestamp, 1) OVER 
        (PARTITION BY id ORDER BY timestamp ASC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) AS previous_timestamp, 
      lagInFrame(value, 1) OVER
        (PARTITION BY id ORDER BY timestamp ASC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) AS previous_value
    FROM incoming_data
    WHERE timestamp > NOW() - INTERVAL detect_window_seconds SECOND
      {% if defined(sensor_id) %}               
        AND id = {{ Int32(sensor_id,description="Used to select a single sensor of interest. Otherwise, returns results for all sensors.")}}
      {% end %}    
    ORDER BY timestamp DESC



NODE endpoint
DESCRIPTION >
    Select rate-of-changes/slopes above the max.

SQL >

    SELECT id, 
      timestamp, 
      Round(slope,2) as slope, 
      Round(value_diff,2) as value_diff, 
      time_diff, 
      previous_value, 
      value, 
      max_slope 
    FROM calculating_slope
    WHERE ABS(slope) > max_slope
    ORDER BY timestamp DESC


