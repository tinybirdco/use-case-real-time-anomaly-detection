DESCRIPTION >
    This Copy Pipe test for `z-score` anomalies across all sensors and write output to the `copy_log` Data Source. These Copy Pipes do the work of compiling their detections into a single place.
    These Copy Pipes do not support query parameters so some details are hardcoded in the SQL. For example, this Copy Pipe hardcodes that the Z-Score multiplier to `2`, generates averages and standard deviations status on a moving `10`-minute window, and tests data recieved in the last `30` seconds.
    Based on the simple_z_score Pipe. This implements a simple algorith based on a time-series average and standard deviation over a minute-scale window of data. Each incoming data point, x, has a Z-Score calculated in this way:
    `zscore = (x - avg) / stddev`

TOKEN "scheduled_copy_z_score" READ

NODE calculate_zscore
DESCRIPTION >
    Promote these to endpoint query parameters?

SQL >
    WITH
        stats AS (
            SELECT id, avg(value) AS average, stddevPop(value) AS std_dev
            FROM incoming_data
            WHERE timestamp BETWEEN NOW() - INTERVAL 10 minute AND NOW()
            GROUP BY id
        )
    SELECT
        i.timestamp,
        i.id,
        i.value,
        (i.value - stats.average) / stats.std_dev AS zscore,
        ROUND(stats.average, 2) AS average,
        ROUND(stats.std_dev, 2) AS std_dev,
        2 AS zscore_multiplier
    FROM incoming_data i
    JOIN stats s ON s.id = i.id
    WHERE timestamp BETWEEN NOW() - INTERVAL 30 SECOND AND NOW()
    ORDER BY timestamp DESC

NODE log
SQL >
    SELECT
        id,
        timestamp,
        value,
        'z-score' AS anomaly_type,
        concat(
            'z-score: ',
            substring(toString(zscore), 1, 6),
            ' | ',
            multiIf(zscore < (-1 * zscore_multiplier), 'low', zscore > zscore_multiplier, 'high', 'ok'),
            ' | average: ',
            toString(average),
            ' | std_dev: ',
            toString(std_dev)
        ) AS note
    FROM calculate_zscore
    WHERE zscore < (-1 * zscore_multiplier) OR zscore > zscore_multiplier
    ORDER BY timestamp DESC

TYPE COPY
TARGET_DATASOURCE copy_log
COPY_SCHEDULE * * * * *
