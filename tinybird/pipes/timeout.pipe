DESCRIPTION >
	Identify any sensors that have not reported in a specified amount of seconds.
See [HERE](https://github.com/tinybirdco/anomaly-detection/blob/main/content/timeout.md) for more background on this recipe.

This Pipe select each sensor's most recent data report, and determines if it has reported within the number of specified seconds.


NODE get_most_recent
DESCRIPTION >
    Compile the most recent reports from all sensors.

SQL >

    %
     WITH {{ Int16(seconds,60,description="If a sensor has not reported in the specified aboout of seconds, it is considered 'timedout'. Defaults to 60.")}} AS seconds
     SELECT id, 
      timestamp, 
      value,
      seconds
    FROM incoming_data
    WHERE timestamp > NOW() - INTERVAL 7 DAY
    ORDER BY timestamp DESC
    LIMIT 1 BY id



NODE endpoint
DESCRIPTION >
    Determine if any sensors have not reported in the specified time window
    {% set _timeout_seconds = 30 %}

SQL >

    %
    SELECT id, timestamp, value, seconds 
    FROM get_most_recent
    WHERE timestamp < NOW() - INTERVAL seconds SECONDS
    {% if defined(sensor_id) %}               
      AND id = {{ Int32(sensor_id, description="Used to select a single sensor of interest. Otherwise, returns results for all sensors.")}} 
    {% end %}  


