DESCRIPTION >
	Identify any sensors that have not reported in a specified amount of seconds.


TOKEN "timeout_read" READ

NODE get_most_recent
DESCRIPTION >
    Compile the most recent reports from all sensors.

SQL >

    WITH RankedData AS (
        SELECT
            id,
            timestamp,
            value,
            ROW_NUMBER() OVER (PARTITION BY id ORDER BY timestamp DESC) AS row_num
        FROM
            incoming_data
    )
    SELECT
        id,
        timestamp,
        value
    FROM
        RankedData
    WHERE
        row_num = 1



NODE endpoint
DESCRIPTION >
    Determine if any sensors have not reported in the specified time window.

    Next: add a timeout_seconds request parameter.

SQL >

    %
    SELECT * FROM get_most_recent
    WHERE timestamp < NOW() - INTERVAL {{Int16(seconds,10,description="If a sensor has not reported in the specified aboout of seconds, it is considered 'timedout'.")}} SECONDS


